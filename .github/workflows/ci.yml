name: Start Flask Application

on:
  push:
    branches:
      - main

jobs:
  start-flask:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r lab4Projects26099/requirements.txt

      - name: Install tmux
        run: |
          sudo apt-get update
          sudo apt-get install tmux -y

      - name: Run the Flask application in tmux
        run: |
          cd lab4Projects26099
          export FLASK_APP=main.py
          tmux new-session -d -s flask_session "flask run --host=0.0.0.0 --port=5000" # Uruchomienie aplikacji Flask w nowej sesji tmux
          sleep 5  # Czekaj chwilę, aby serwer miał czas na uruchomienie
          response=$(curl -X POST -F "file=@cleaned_data.csv" http://localhost:5000/predict)
          echo "Response from server:" > response.txt
          echo "$response" >> response.txt  # Zapisz odpowiedź do pliku

          
      - name: Read response from file
        run: |
          cd lab4Projects26099
          echo "Response from server read from file:"
          cat response.txt  # Wyświetlenie odpowiedzi z pliku

  publish-docker:
    runs-on: ubuntu-latest
    needs: start-flask

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build  Docker image
        run: |
          cd lab4Projects26099
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/lab4-analyzer:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lab4-analyzer:latest

      - name: Send CSV file to Flask app in Docker
        run: |
          response=$(curl -X POST -F "file=@lab4Projects26099/cleaned_data.csv" http://localhost:5000/predict)
          echo "Response from server:" > response.txt
          echo "$response" >> response.txt

      - name: push Docker image
        run: |
          cd lab4Projects26099
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lab4-analyzer:latest
          
      - name: Run Flask application in Docker
        run: |
          docker run -d -p 5000:5000 --name flask_container ${{ secrets.DOCKER_HUB_USERNAME }}/lab4-analyzer:latest
